version: '3.5'

services:
  # VPN proxy setup  
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8181:8181/tcp # port for qbittorrent
      - 8180:8080/tcp # port for sabnzbd
      - 8191:8191/tcp # flaresolverr
      - 9696:9696/tcp # prowlarr
    volumes:
      - ${CONFIG_HOME}/gluetun/config:/gluetun
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - VPN_TYPE=openvpn      
      - OPENVPN_USER=${VPN_USER}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - SERVER_COUNTRIES=Netherlands
      - FIREWALL_OUTBOUND_SUBNETS=${GLUETUN_SUBNETS}
    restart: unless-stopped
    networks:
      - media-network

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}  
      - JELLYFIN_PublishedServerUrl=${HOST_IP}
    volumes:
      - ${DATA}:/data
      - ${CONFIG_HOME}/jellyfin/config:/config
      - ${CONFIG_HOME}/jellyfin/config/web-config:/jellyfin/jellyfin-web
    network_mode: host # dlna needs port udp 1900, conflicts with plex if you try to use bridge node on both
    restart: unless-stopped
  
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    user: ${UID}:${GID}
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    ports:
      - 5055:5055
    volumes:
      - ${CONFIG_HOME}/jellyseer/config:/app/config
    restart: unless-stopped
    networks:
      - media-network
  
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_HOME}/radarr/config:/config
      - ${DATA}:/data
    ports:
      - "7878:7878"
    restart: unless-stopped
    networks:
      - media-network
      
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_HOME}/sonarr/config:/config
      - ${DATA}:/data
    ports:
      - "7979:8989"
    restart: unless-stopped
    networks:
      - media-network      

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_HOME}/prowlarr/config:/config
      - ${DATA}:/data
    restart: unless-stopped
    network_mode: service:gluetun 
    depends_on:
      gluetun:
        condition: service_healthy
      
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
      - WEBUI_PORT=8181
    volumes:
      - ${CONFIG_HOME}/qbittorrent/config:/config
      - ${DATA}/torrents:/data/torrents
    restart: unless-stopped
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
          
  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_HOME}/sabnzbd/config:/config
      - ${DATA}/usenet:/data/usenet #optional      
    restart: unless-stopped
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    
  # syncs quality profiles from trash to radarr
  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    user: ${UID}:${GID}    
    volumes:
      - ${CONFIG_HOME}/recyclarr/config:/config
    environment:
      - TZ=${TZ}
      - RECYCLARR_CREATE_CONFIG=true
    restart: unless-stopped      
    networks:
      - media-network 
  
  # proxy to bypass cloudlare protection that blocks prowlarr
  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - TZ=${TZ}
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    
networks:
  media-network:
